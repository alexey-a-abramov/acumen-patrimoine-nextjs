name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]
  workflow_dispatch: # Allow manual trigger

env:
  PROJECT_ID: sextant-prestige-poc
  SERVICE_NAME: acumen-patrimoine
  REGION: europe-west1

jobs:
  # Build and test job
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'

    - name: Enable Corepack
      run: corepack enable

    - name: Install dependencies
      run: yarn install --immutable

    - name: Run lint
      run: yarn lint

    - name: Build application
      run: yarn build

  # Deploy job (only on main branch)
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Configure Docker to use gcloud as a credential helper
      run: gcloud auth configure-docker

    - name: Build Docker image
      run: |
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest .

    - name: Push Docker image to GCR
      run: |
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
          --region ${{ env.REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --port 3000 \
          --memory 1Gi \
          --cpu 1 \
          --max-instances 10 \
          --set-env-vars NODE_ENV=production,GOOGLE_SHEETS_ID=${{ secrets.GOOGLE_SHEETS_ID }},GOOGLE_SHEETS_CREDENTIALS='${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}'

    - name: Get service URL
      run: |
        SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region=${{ env.REGION }} --format="value(status.url)")
        echo "🚀 Deployment successful!"
        echo "🌐 Service URL: $SERVICE_URL"
        echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV

    - name: Create deployment comment
      if: github.event_name == 'push'
      uses: actions/github-script@v7
      with:
        script: |
          const serviceUrl = process.env.SERVICE_URL;
          const comment = `🚀 **Deployment Successful!**\n\n` +
            `📅 **Commit:** ${context.sha.substring(0, 7)}\n` +
            `🌐 **URL:** [${serviceUrl}](${serviceUrl})\n` +
            `⚡ **Environment:** Production\n` +
            `📦 **Service:** ${process.env.SERVICE_NAME}\n` +
            `🏷️ **Region:** ${process.env.REGION}`;
          
          // Create a commit status
          github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.sha,
            state: 'success',
            description: 'Deployed to Cloud Run',
            target_url: serviceUrl,
            context: 'deployment/cloud-run'
          });
